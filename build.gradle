/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    //id 'java-library'
    id 'java'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // for RichTextFX
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.9.2'
    // pseuCo
    //compile files('libs/pseuco-ide-4677.jar')
    //jdk.jdi 
    //compile files('libs/tools.jar')
    //javaFX11
    implementation 'org.openjfx:javafx-base:11.0.1:win'
    implementation 'org.openjfx:javafx-controls:11.0.1:win'
    implementation 'org.openjfx:javafx-fxml:11.0.1:win'
    implementation 'org.openjfx:javafx-graphics:11.0.1:win'
    implementation 'org.openjfx:javafx-base:11.0.1:linux'
    implementation 'org.openjfx:javafx-controls:11.0.1:linux'
    implementation 'org.openjfx:javafx-fxml:11.0.1:linux'
    implementation 'org.openjfx:javafx-graphics:11.0.1:linux'
    implementation 'org.openjfx:javafx-base:11.0.1:mac'
    implementation 'org.openjfx:javafx-controls:11.0.1:mac'
    implementation 'org.openjfx:javafx-fxml:11.0.1:mac'
    implementation 'org.openjfx:javafx-graphics:11.0.1:mac'
    
    
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

configurations.implementation.setCanBeResolved(true)

jar {
	manifest {
		attributes('Main-Class': 'debugger.Main', 'Class-Path': '.')
	}
	from{
		configurations.implementation.collect {it.isDirectory() ? it : zipTree(it)}
	}
}
